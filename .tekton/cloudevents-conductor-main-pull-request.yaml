apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/stolostron/cloudevents-conductor?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch == "main" && (".tekton/cloudevents-conductor-main-[!b]*.yaml".pathChanged() || "go.{mod,sum}".pathChanged() || "{pkg,cmd}/***".pathChanged() || "Containerfile.konflux".pathChanged())
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: maestro-main
    appstudio.openshift.io/component: cloudevents-conductor-main
    pipelines.appstudio.openshift.io/type: build
  name: cloudevents-conductor-main-on-pull-request
  namespace: crt-redhat-acm-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/crt-redhat-acm-tenant/cloudevents-conductor-main:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: dockerfile
    value: Containerfile.konflux
  - name: path-context
    value: .
  - name: build-source-image
    value: "true"
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: '[ {"type": "gomod", "path": "."} ]'
  pipelineRef:
    resolver: git
    params:
      - name: url
        value: "https://github.com/stolostron/konflux-build-catalog.git"
      - name: revision
        value: main
      - name: pathInRepo
        value: pipelines/common.yaml
  taskRunTemplate:
    serviceAccountName: build-pipeline-cloudevents-conductor-main
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
